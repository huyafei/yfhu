# 自动化部署名称
name: CI

# 触发部署的条件 当 master 分支, 有 push 的操作, 即可触发。
on:
  # 在推或拉请求事件上触发工作流，但仅用于主分支
  push:
    tags:
      - 'v*'
#    branches: # 此处不仅限于监听分支, 还可监听 tag
#      - master
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
      - README.md

# 一个工作流运行由一个或多个作业组成，这些作业可以顺序地或并行地运行
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    # 下载源码
    - name: Checkout
      uses: actions/checkout@master

    # 安装 node
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        # 选择要使用的 node 版本
        node-version: '14'

    # 打包构建
    - name: Build
    - run: npm install
    - run: npm run build
    - run: tar -zcvf release.tgz .nuxt static nuxt.config.js package.json pm2.config.json

    # 发布 Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # 上传构建结果到 Release
    # 将 release.tgz 上传到 github 上
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.tgz
        asset_name: release.tgz
        asset_content_type: application/x-tgz

    # 部署到服务器
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /home/www/web/yfhu
          wget https://github.com/huyafei/yfhu/releases/latest/download/release.tgz -O release.tgz
          tar zxvf release.tgz
          rm -rf release.tgz
          npm install --production
          npm run start
          pm2 reload pm2.config.json
